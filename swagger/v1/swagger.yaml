---
openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: API Documentation for Version 1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    error:
      type: object
      properties:
        error:
          type: string
paths:
  "/api/v1/auth/login":
    post:
      summary: Authenticates user and returns token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user authenticated
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/v1/auth/logout":
    delete:
      summary: Logs out user by invalidating token
      tags:
      - Authentication
      security:
      - bearer_auth: []
      responses:
        '200':
          description: logged out successfully
        '401':
          description: unauthorized
  "/api/v1/dashboard":
    get:
      summary: Retrieves dashboard information
      tags:
      - Dashboard
      security:
      - bearer_auth: []
      responses:
        '200':
          description: dashboard information retrieved
        '401':
          description: unauthorized
  "/api/v1/features":
    get:
      summary: Retrieves all feature flags
      tags:
      - Features
      security:
      - bearer_auth: []
      responses:
        '200':
          description: feature flags retrieved
        '401':
          description: unauthorized
  "/api/v1/features/{id}":
    parameters:
    - name: id
      in: path
      description: Feature flag name
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific feature flag status
      tags:
      - Features
      security:
      - bearer_auth: []
      responses:
        '200':
          description: feature flag is disabled
        '401':
          description: unauthorized
  "/api/v1/health":
    get:
      summary: Retrieves API health status
      tags:
      - Health
      responses:
        '200':
          description: health status retrieved
  "/api/v1/users":
    get:
      summary: Retrieves all users
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: users found
        '401':
          description: unauthorized
    post:
      summary: Creates a new user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: new@example.com
                    password:
                      type: string
                      example: password123
                    password_confirmation:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
                  - password_confirmation
              required:
              - user
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a specific user
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: user found
        '404':
          description: user not found
        '401':
          description: unauthorized
    put:
      summary: Updates a user
      tags:
      - Users
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: user updated
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: updated@example.com
              required:
              - user
    delete:
      summary: Deletes a user
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '204':
          description: user deleted
        '401':
          description: unauthorized
servers:
- url: "/"
  description: Relative URL (preferred for Docker environments)
- url: http://localhost:3000
  description: Local development server
